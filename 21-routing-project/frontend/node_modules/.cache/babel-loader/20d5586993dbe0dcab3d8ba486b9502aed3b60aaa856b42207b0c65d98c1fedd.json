{"ast":null,"code":"var _jsxFileName = \"/Users/akaleshi/code/react-course/21-routing-project/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem.js\";\nimport EventsList from \"../components/EventsList.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    //return { isError: true, message: \"Could not fetch events\" };\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nexport async function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //return { isError: true, message: \"Could not fetch events\" };\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events.\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  return defer({\n    event: loadEvent(params.eventId),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not delete event\"\n    }), {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Await","defer","redirect","useRouteLoaderData","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","_c","loadEvent","id","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["/Users/akaleshi/code/react-course/21-routing-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { Await, defer, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem.js\";\nimport EventsList from \"../components/EventsList.js\";\nfunction EventDetailPage() {\n  const { event, events } = useRouteLoaderData(\"event-detail\");\n  return (\n    <>\n      <Await resolve={event}>\n        {(loadedEvent) => <EventItem event={loadedEvent} />}\n      </Await>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\n      </Await>\n    </>\n  );\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n\n  if (!response.ok) {\n    //return { isError: true, message: \"Could not fetch events\" };\n    throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n      status: 500,\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\n\nexport async function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    //return { isError: true, message: \"Could not fetch events\" };\n    throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n      status: 500,\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport async function loader({ request, params }) {\n  return defer({\n    event: loadEvent(params.eventId),\n    events: loadEvents(),\n  });\n}\n\nexport async function action({ params, request }) {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`, {\n    method: request.method,\n  });\n\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Could not delete event\" }), {\n      status: 500,\n    });\n  }\n\n  return redirect(\"/events\");\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}