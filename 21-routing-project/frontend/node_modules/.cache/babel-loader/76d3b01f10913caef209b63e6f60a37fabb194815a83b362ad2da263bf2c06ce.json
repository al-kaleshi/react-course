{"ast":null,"code":"var _jsxFileName = \"/Users/akaleshi/code/react-course/21-routing-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/EventsPage\";\nimport EventDetailPage, { action as deleteEventAction, loader as eventDetailLoader } from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport { action as manipulateEventAction } from \"./components/EventForm.js\";\nimport NewsletterPage, { action as newsletterAction } from './pages/Newsletter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':eventId',\n      id: 'event-detail',\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 26\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: 'edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }, this),\n      action: manipulateEventAction\n    }]\n  }, {\n    path: 'newsletter',\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }, this),\n    action: newsletterAction\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootLayout","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","action","deleteEventAction","eventDetailLoader","NewEventPage","EditEventPage","EventsRootLayout","ErrorPage","manipulateEventAction","NewsletterPage","newsletterAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/Users/akaleshi/code/react-course/21-routing-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/Root\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/EventsPage\";\nimport EventDetailPage, {\n  action as deleteEventAction,\n  loader as eventDetailLoader,\n} from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport { action as manipulateEventAction } from \"./components/EventForm.js\";\nimport NewsletterPage, { action as newsletterAction } from './pages/Newsletter';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: 'events',\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: ':eventId',\n            id: 'event-detail',\n            loader: eventDetailLoader,\n            children: [\n              {\n                index: true,\n                element: <EventDetailPage />,\n                action: deleteEventAction,\n              },\n              {\n                path: 'edit',\n                element: <EditEventPage />,\n                action: manipulateEventAction,\n              },\n            ],\n          },\n          {\n            path: 'new',\n            element: <NewEventPage />,\n            action: manipulateEventAction,\n          },\n        ],\n      },\n      {\n        path: 'newsletter',\n        element: <NewsletterPage />,\n        action: newsletterAction,\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}